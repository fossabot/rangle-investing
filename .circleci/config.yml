# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  test:
    docker:
      # specify the version you desire here
      - image: circleci/node:8-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/rangle-investing

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "yarn.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "yarn.lock" }}

      # run lint
      - run: yarn lint
      # run tests!
      - run: yarn test -sr --code-coverage --no-progress

      - store_artifacts:
          path: ./coverage

  deploy:
    docker:
      # specify the version you desire here
      - image: circleci/node:8-browsers

    working_directory: ~/rangle-investing

    steps:
      - run:
          name: Install aws cli
          command: sudo apt-get -y -qq install awscli

      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "yarn.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "yarn.lock" }}

      - run: yarn build --no-progress

      - run:
          name: Deploy to S3 if tests pass and branch is Master
          command: aws s3 sync ./dist s3://cloud.rangleinvesting.com --delete

workflows:
  version: 2
  build-deploy:
    jobs:
      - test
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master

